[versions]
## SDK Versions
minSdk = "21"
targetSdk = "34"
compileSdk = "34"

# Dependencies
kotlin = "2.0.10"

## Gradle Plugin version must be compatible with Multiplatform
## https://kotlinlang.org/docs/multiplatform-compatibility-guide.html#version-compatibility
android-gradle-plugin = "8.5.2"
coroutines = "1.9.0"
kotlinx-datetime = "0.6.0"
# TODO: Update Ktor library to 3.0
ktor = "2.3.12"

stately = "2.0.6"
java = "21"
kermit = "2.0.4"
sqliter = "1.3.1"

hyperdrive = "0.1.148"

multiplatformSettings = "1.1.1"
sqlDelight = "2.0.2"
firebase-bom = "33.4.0"
firebase-crashlytics-gradle = "3.0.2"
gms-google-services = "4.4.2"

# TODO: Update Compose libraries. There is currently a conflicing issue with the HorizontalPager
compose-androidx-ui = "1.6.8"
compose-compiler = "1.5.15"
composeNavigation = "2.7.7"
compose-jb = "1.6.11"

accompanistNavigationAnimation = "0.34.0"
splashscreen = "1.0.1"
junit = "4.13.2"
junitKtx = "1.2.1"
imageLoader = "1.2.2.1"
korio = "4.0.10"

# Sample - Android
androidx-core = "1.13.1"
androidx-lifecycle = "2.8.6"
androidx-activity-compose = "1.9.2"
android-desugaring = "2.1.2"
koin = "3.5.3"
uuid = "0.8.3"
# TODO: Update Ktlint when fix is available
ktlint = "12.1.1"
# TODO: Update Coil library when Ktor is updated to 3.0
coil = "3.0.0-alpha04"
zoomimage = "1.1.0-alpha06"
skie = "0.9.0-RC.1"

[libraries]
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-network = { module = "io.coil-kt.coil3:coil-network-ktor", version.ref = "coil" }
sqliter = { module = "co.touchlab:sqliter-driver", version.ref = "sqliter" }
compose-compiler = { module = "androidx.compose.compiler:compiler", version.ref = "compose-compiler" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "splashscreen" }

accompanist-navigationAnimation = { module = "com.google.accompanist:accompanist-navigation-animation", version.ref = "accompanistNavigationAnimation" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase-bom" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics-ktx", version = "_" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx", version = "_" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging-ktx", version = "_" }
hyperdrive-multiplatformx-api = { module = "org.brightify.hyperdrive:multiplatformx-api", version.ref = "hyperdrive" }
android-desugar = { module = "com.android.tools:desugar_jdk_libs", version.ref = "android-desugaring" }
uuid = { module = "com.benasher44:uuid", version.ref = "uuid" }
korio = { module = "com.soywiz.korlibs.korio:korio", version.ref = "korio" }
test-junit = { module = "junit:junit", version.ref = "junit" }
test-junitKtx = { module = "androidx.test.ext:junit-ktx", version.ref = "junitKtx" }
test-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
imageLoader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "imageLoader" }

kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }

multiplatformSettings-core = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
multiplatformSettings-test = { module = "com.russhwolf:multiplatform-settings-test", version.ref = "multiplatformSettings" }

sqldelight-driver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqldelight-driver-ios = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
sqldelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqlDelight" }

kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
kermit-simple = { module = "co.touchlab:kermit-simple", version.ref = "kermit" }
kermit-crashlytics = { module = "co.touchlab:kermit-crashlytics", version.ref = "kermit" }
stately-common = { module = "co.touchlab:stately-common", version.ref = "stately" }

# Sample - Android
androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }

compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose-androidx-ui" }
compose-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-androidx-ui" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose-androidx-ui" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose-androidx-ui" }
compose-activity = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity-compose" }
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "composeNavigation" }

koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }

zoomimage-composeResources = { module = "io.github.panpf.zoomimage:zoomimage-compose-resources", version.ref = "zoomimage" }

[plugins]
crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebase-crashlytics-gradle" }
googleServices = { id = "com.google.gms.google-services", version.ref = "gms-google-services" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-jb" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
androidLibrary = { id = "com.android.library", version.ref = "android-gradle-plugin" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
skie = { id = "co.touchlab.skie", version.ref = "skie" }

[bundles]
ktor-common = ["ktor-client-core", "ktor-client-logging", "ktor-client-serialization", "ktor-client-contentNegotiation"]
app-ui = [
    "compose-compiler",
    "androidx-core",
    "androidx-lifecycle-runtime",
    "androidx-lifecycle-viewmodel",
    "androidx-lifecycle-compose",
    "compose-ui",
    "compose-tooling",
    "compose-foundation",
    "compose-material",
    "compose-activity"
]

androidx-compose = [
    "compose-ui",
    "compose-tooling",
    "compose-foundation",
    "compose-material",
    "compose-activity",
    "compose-navigation"
]

sqldelight-common = [
    "sqldelight-runtime",
    "sqldelight-coroutines"
]
