CREATE TABLE profileTable(
    id TEXT NOT NULL,
    conferenceId INTEGER NOT NULL,
    fullName TEXT NOT NULL,
    bio TEXT,
    tagLine TEXT,
    profilePicture TEXT,
    twitter TEXT,
    linkedIn TEXT,
    website TEXT,
    PRIMARY KEY (id, conferenceId),
    FOREIGN KEY (conferenceId) REFERENCES conferenceTable(id)
);

upsert:
INSERT OR REPLACE INTO profileTable(id, conferenceId, fullName, bio, tagLine, profilePicture, twitter, linkedIn, website)
VALUES(?,?,?,?,?,?,?,?,?);

delete {
    DELETE FROM sessionSpeakerTable WHERE speakerId = :speakerId;
    DELETE FROM profileTable WHERE id = :speakerId AND conferenceId = :conferenceId;
}

selectById:
SELECT * FROM profileTable WHERE id = ? AND conferenceId = ?;

existsById:
SELECT count(1) FROM profileTable WHERE id = ? AND conferenceId = ?;

selectBySession:
SELECT profileTable.*
FROM profileTable
JOIN sessionSpeakerTable ON sessionSpeakerTable.speakerId = id AND sessionSpeakerTable.conferenceId = profileTable.conferenceId
WHERE sessionSpeakerTable.sessionId = ? AND profileTable.conferenceId = ?
ORDER BY sessionSpeakerTable.displayOrder;

selectBySponsor:
SELECT profileTable.*
FROM profileTable
JOIN sponsorRepresentativeTable ON sponsorRepresentativeTable.representativeId = id AND sponsorRepresentativeTable.conferenceId = profileTable.conferenceId
WHERE sponsorRepresentativeTable.sponsorName = ? AND sponsorRepresentativeTable.sponsorGroupName = ? AND profileTable.conferenceId = ?
ORDER BY sponsorRepresentativeTable.displayOrder;

selectAll:
SELECT *
FROM profileTable
WHERE conferenceId = ?;
