[
  {
    "groupId": null,
    "groupName": "All",
    "sessions": [
      {
        "questionAnswers": [],
        "id": "367803",
        "title": "Welcome Address",
        "description": "Join droidcon Global CEO, Greg Fawson for some insights into this year's event, what's new at droidcon and some exciting news about our new E-Learning platform and more!",
        "startsAt": "2022-09-01T09:00:00",
        "endsAt": "2022-09-01T09:20:00",
        "isServiceSession": false,
        "isPlenumSession": true,
        "speakers": [],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45652,
                "name": "Introductory and overview"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45655,
                "name": "Lightning talk"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24362,
        "room": "Lovelace",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "359805",
        "title": "Keynote: What is the future of the community in an always-evolving world?",
        "description": "The pandemic destabilized many communities, android included. In turn, community interactions have evolved. In this talk, I will explore how one can contribute to the community in an esteemed way at every phase of their career; we can all agree community engagement varies and does help elevate our careers. \r\n\r\nWe will talk about what a junior can do and discuss what a senior can do in an evolving community. As I give examples of ways, I have been engaging the Android community and leveraging this to build my network.",
        "startsAt": "2022-09-01T09:20:00",
        "endsAt": "2022-09-01T10:00:00",
        "isServiceSession": false,
        "isPlenumSession": true,
        "speakers": [
          {
            "id": "986c8c91-986c-420b-a555-04347e366539",
            "name": "Madona Wambua"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45652,
                "name": "Introductory and overview"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24362,
        "room": "Lovelace",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "289526",
        "title": "Breaking the Rules: Dynamic Navigation in Modularized Apps",
        "description": "Properly handled navigation is critical for modularized apps, which often implement navigation logic at runtime. This presents certain challenges when working with the Navigation Components library:\r\n* How do we determine NavDestinations that are in other libraries, without access to their NavGraphs?\r\n* How do we change the way backstack fragments behave based on past NavDestinations?\r\n* How do we safely maintain state for each Fragment in the backstack?\r\n\r\nAnd not least - how can we solve all of these issues when working with Compose?\r\n\r\nAdd in multiple modules and multiple libraries, and writing clean navigation logic can get really messy. I’ve dealt with all of these complexities when working on heavily modularized applications. I’ll walk the audience through the lessons I learned, and how to push the Navigation library capabilities to the fullest extent.",
        "startsAt": "2022-09-01T10:10:00",
        "endsAt": "2022-09-01T10:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "1584d7eb-825f-4ea3-bed7-93793e23abc8",
            "name": "Sumayyah Ahmed"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45654,
                "name": "Advanced"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45677,
                "name": "Modularization"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27013,
        "room": "Liskov",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "353732",
        "title": "Kotlin Multiplatform at five years",
        "description": "2017 was the year that Kotlin/Native and Kotlin Multiplatform first started to emerge publicly. In the five years since then, they’ve evolved dramatically, and teams all over the world are now shipping applications that share code across platforms. With Kotlin Multiplatform Mobile approaching beta status, let’s look back at how far things have come, highlight some recent improvements, and imagine what it all might look like 5 years in the future.",
        "startsAt": "2022-09-01T10:10:00",
        "endsAt": "2022-09-01T10:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "7a1d47f2-dfd1-4af1-b097-5c415f9b29c3",
            "name": "Russell Wolf"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45660,
                "name": "Cross-Platform"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24362,
        "room": "Lovelace",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "360472",
        "title": "Large screens and foldables",
        "description": "Do you want to make sure your app presents a best-in-class user experience beyond the smartphone? Come and learn how to design, develop, and test applications that bring optimized experiences for large screen and foldable devices. We will explore the opportunities and challenges of developing for different form factors and the available APIs, tools and best practices from the Microsoft Surface Duo team to help bring your apps into the modern age!",
        "startsAt": "2022-09-01T10:10:00",
        "endsAt": "2022-09-01T10:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "d0877b70-ffe4-4d08-b723-f3deb49b1525",
            "name": "Kristen Halper"
          },
          {
            "id": "1a164a94-1dcd-4a64-a33e-f057e72f6d3a",
            "name": "Guy Merin"
          },
          {
            "id": "87023752-0175-4034-b837-3a7714c7c474",
            "name": "Parker Schroeder"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45652,
                "name": "Introductory and overview"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              },
              {
                "id": 45665,
                "name": "Design"
              },
              {
                "id": 45675,
                "name": "UI/UX"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24364,
        "room": "Hopper",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "332183",
        "title": "Optimize your app for large screens",
        "description": "The rising popularity of tablets and foldable devices unlocks opportunities to address a new range of users in innovative ways. A responsive UI allows you to easily build this experience.\r\n\r\nIn this talk, you’ll get an understanding of what’s available for developers to support large screens. We’ll cover new APIs like Compose for large screens and Jetpack WindowManager, Activity Embedding, Drag and Drop, Android Studio templates and more. By the end of this session, you’ll have all the skills you need to create and test responsive UIs on Android so that users love your app no matter what device they’re using it on.",
        "startsAt": "2022-09-01T10:10:00",
        "endsAt": "2022-09-01T10:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "f89ea766-4af9-4b88-8842-ede574e4c648",
            "name": "Paul Lammertsma"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45675,
                "name": "UI/UX"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24363,
        "room": "Hamilton",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "351520",
        "title": "The Evolution of Android Graphics",
        "description": "Android 10 - 13 added significant new capabilities to Android platform graphics, including HardwareRenderer, RenderNode, RenderEffect, RuntimeShader, and more. At the same time, RenderScript has been deprecated and we've introduced the RenderScript Intrinsics Replacement Toolkit. This talk covers how to use all the new stuff including AGSL, how to bridge an app from RenderScript to the new world, how to take advantage of this within Jetpack Compose, and fundamentals about how Android's Canvas works.",
        "startsAt": "2022-09-01T10:10:00",
        "endsAt": "2022-09-01T10:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "6157874c-02af-479a-b949-99ab98398ebe",
            "name": "Daniel Galpin"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27014,
        "room": "Booth",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "340606",
        "title": "6 weeks of Compose or How a good Design System is vital in Compose",
        "description": "In this talk, we will cover the pitfalls and wins our Mobile Team encountered in rewriting our mobile application in Compose in just 6 weeks\r\n\r\nWe will focus, on the pros cons, pitfalls, and problems we encounter, also the learnings we gather and the process that helps us to make this happen! that probably will help everyone that may want to move from XML to Compose in a smooth way \r\n\r\nWe will tackle how a good design system can save you a lot of time if we focus on writing good atoms and good components!  ",
        "startsAt": "2022-09-01T11:00:00",
        "endsAt": "2022-09-01T11:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "06b204ed-71d7-485f-8c1f-aa6790ac2451",
            "name": "Dinorah Tovar Tovar"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24364,
        "room": "Hopper",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "259227",
        "title": "Android App Bundle: from start to deployment",
        "description": "This publication format has been around for a while now and will be required for the new apps on the Play Store in August 2021. \r\n\r\nThis session will cover all the steps to migrate your existing project in order to build and release a brand new AAB file to the Play Store. You will see the advantages and drawbacks of App Bundle. How you can easily configure your project, handle testing tracks and update your CI/CD (CircleCI, Bitrise) to deploy your optimized app with fastlane. We will go even further with taking a look at Play Feature & Assets Delivery.",
        "startsAt": "2022-09-01T11:00:00",
        "endsAt": "2022-09-01T11:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "462e6b97-01f9-44b1-864c-9d85bedf911b",
            "name": "Julien Salvi"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45652,
                "name": "Introductory and overview"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45658,
                "name": "Tooling"
              },
              {
                "id": 45659,
                "name": "CI/CD"
              },
              {
                "id": 45663,
                "name": "Android"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27014,
        "room": "Booth",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "289074",
        "title": "Building Responsive UIs for tablets, foldables, and other devices",
        "description": "The rising popularity of tablets and foldable devices unlocks opportunities to address a new range of users in innovative ways. This talk will cover how to design and test Android applications that look and feel great across all device types and screen sizes, from tablets to foldables to ChromeOS. We'll show you the fundamentals of how content can best fit these varying screens, introduce some canonical layouts as a starting point for your designs, show you how to leverage foldables, and give you tips to structure your app using principles of responsive UI.",
        "startsAt": "2022-09-01T11:00:00",
        "endsAt": "2022-09-01T11:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "c70d10a5-999c-4858-a39c-7326570cee91",
            "name": "Ran Nachmany"
          },
          {
            "id": "251be489-64b2-467e-ad31-5d34e75be970",
            "name": "Ofir Miron"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              },
              {
                "id": 45665,
                "name": "Design"
              },
              {
                "id": 45675,
                "name": "UI/UX"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24363,
        "room": "Hamilton",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "335343",
        "title": "Demystifying Molecule: Running Your Own Compositions For Fun And Profit",
        "description": "Molecule is a library for turning Composables into Flows. But how does that happen? And why would you want to do such a thing? And why *not*? In this talk, Ash and Bill will dive a bit into how Molecule does what it does, and help you understand where, when, and how you should use it.",
        "startsAt": "2022-09-01T11:00:00",
        "endsAt": "2022-09-01T11:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "10659767-356c-4cd5-ba9c-12cec7a3ce79",
            "name": "Ash Davies"
          },
          {
            "id": "339bb897-9203-4db4-8a31-c1c141ef5cc4",
            "name": "Bill Phillips"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24362,
        "room": "Lovelace",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "353702",
        "title": "Mobile Developer Productivity at Scale",
        "description": "Building large mobile apps is hard. Keeping developers productive while working on large mobile apps is harder. Most Android developer tools target smaller apps, so how do we think about building some of the largest apps in the world?\r\n\r\nIn this talk, you’ll learn how Uber enables hundreds of Android developers to contribute on a handful of app in a single monorepo, while keeping developers feeling productive and shipping reliable apps quickly. \r\n\r\nWe’ll cover how the mobile teams are structured, how developer productivity is measured and monitored, custom tools like Bazel & Buck, our CI/CD diff pipeline, our testing and device lab infrastructure, our remote dev server environment, our custom IDE plugins and tools, how we modularize and use common app architecture and frameworks to keep consistency in all our apps, how we prioritize open-source engagement, and some of our best practices to continually evolve and modernize our apps at scale along to keep up with the fast moving pace of Android.\r\n\r\nWhether you're planning for your own app's scale, or just curious how it's done in one of the largest apps, you won't want to miss this talk.",
        "startsAt": "2022-09-01T11:00:00",
        "endsAt": "2022-09-01T11:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "6a3de662-ef86-4c62-bb68-2f7ebe607f76",
            "name": "Ty Smith"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45654,
                "name": "Advanced"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45658,
                "name": "Tooling"
              },
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              },
              {
                "id": 45670,
                "name": "Libraries"
              },
              {
                "id": 45677,
                "name": "Modularization"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27013,
        "room": "Liskov",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "331836",
        "title": "Chasing performance issues methodically",
        "description": "Solving performance problems at scale has always been tricky. There is a lot of confusion on how to address those problems in android. \r\nIn this talk, we will try to understand the nature of the performance problems, how to select tooling for these issues, and also try to make a generic approach that could apply to most of the problems.\r\n\r\n1. Performance problems that happen at scale like cold start, battery, crashes, ANR, etc.\r\n2. Common characteristics of these problems:\r\n- Indeterministic\r\n- We get to know about them when things go out of hand\r\n- Affects business timelines\r\n- They create a sense of urgency\r\n- Hard to create observability\r\n3. Anti methodologies: Explaining some of the common anti methodologies or pitfalls that developers fall into while solving these issues as also referenced by Brendan Gregg (Performance Engineer from Netflix) in his book.\r\n4. Describing a generic methodology and tools to solve performance issues methodically by taking cold start as a simple example:\r\n- Identify important metrics to chase for the issue, with a good signal to noise ratio\r\n- Stop bleeding by putting a quality gate on the baseline branch\r\n- Identify impacted sessions from production and get the telemetry data (traces, metrics, counters, etc.) selectively for impacted sessions\r\n- Identify problems in impacted reports to bring down the baseline\r\n5. Conclusion:\r\n- You have to find a set of tools that help to create the methodology for chasing those issues\r\n- Relying more on methodology rather than tool first\r\n",
        "startsAt": "2022-09-01T11:50:00",
        "endsAt": "2022-09-01T12:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "f2760927-d514-46b7-ab6c-89d52278c314",
            "name": "Amanjeet Singh"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45654,
                "name": "Advanced"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45658,
                "name": "Tooling"
              },
              {
                "id": 45659,
                "name": "CI/CD"
              },
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              },
              {
                "id": 45670,
                "name": "Libraries"
              },
              {
                "id": 45676,
                "name": "Firebase"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27014,
        "room": "Booth",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "353734",
        "title": "Dynamic Code with Zipline",
        "description": "As products grow, teams tend to move business logic to the backend. Keeping clients dumb avoids duplication and allows behavior changes without app releases. But it comes with significant downsides: limited interactivity, difficult development, and inflexible APIs.\r\n\r\nZipline is a new library from Cash App that takes a new approach. Instead of moving logic to the backend, Zipline runs dynamic Kotlin/JS code in your Android and iOS apps. It lets you ship behavior changes without an app release!\r\n\r\nThis talk advises when to use dynamic code and how to adopt it in your apps. It also goes deep on Zipline internals:\r\n\r\n - Interface bridging\r\n - Coroutines & Flows\r\n - Fast launches\r\n - Debugging features\r\n\r\nIf your apps are getting dumber, or you’re using server-driven UI, don’t miss this talk for a great alternative.\r\n",
        "startsAt": "2022-09-01T11:50:00",
        "endsAt": "2022-09-01T12:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "4a13d160-c8c3-4214-926f-24a5b15c78dd",
            "name": "Jesse Wilson"
          },
          {
            "id": "3eabdd46-6cb5-4083-9eb8-1ad9a3b7a5eb",
            "name": "Jake Wharton"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45660,
                "name": "Cross-Platform"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24362,
        "room": "Lovelace",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "351625",
        "title": "How we brought down our build times. Modularization impact on build speeds and metrics",
        "description": "At Pinterest, we worked on modularizing the application during all 2021. However, we noticed that build numbers were not really getting major improvements out of this.\r\n\r\nIn this talk, I’ll share our learnings from our experience in improving the build times in the context of a modularized app and the metrics we found useful to track in order to more easily root cause build time regressions\r\n\r\nKey Takeaways: \r\n- Be careful about building unnecessarily\r\n- More modules, means more parallelization, but it also means more thermal throttling\r\n- Find metrics that make sense on your team depending on what goals you have.\r\n",
        "startsAt": "2022-09-01T11:50:00",
        "endsAt": "2022-09-01T12:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "ef7e2279-de2b-4905-ae2f-2803d2db1fb9",
            "name": "Manuel Nakamurakare"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45658,
                "name": "Tooling"
              },
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45672,
                "name": "Gradle"
              },
              {
                "id": 45677,
                "name": "Modularization"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27013,
        "room": "Liskov",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "353075",
        "title": "Indemnity in the Data Layer",
        "description": "This talk will cover how we implemented the data layer in the Now in Android app. Our design enabled us to build an offline first experience that is fast, efficient and reliable while being able to support a reactive programming style.\r\n\r\nWe’ll show how data is stored by the data layer (SQLite and DataStore), the unique advantages each storage type provides along with naming conventions, modeling and query concerns. We'll also cover migrations and best practices for migrating data. Finally, we'll discuss data synchronization and conflict resolution with remote data sources",
        "startsAt": "2022-09-01T11:50:00",
        "endsAt": "2022-09-01T12:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "0990c055-9a74-45f9-9f5a-10e2d9196649",
            "name": "Tunji Dahunsi"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              },
              {
                "id": 45668,
                "name": "Coroutines"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24364,
        "room": "Hopper",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "323877",
        "title": "Life is too short to develop only for Android - A journey to Server-driven UI",
        "description": "Have you ever had to implement a last minute feature? Did your requirements change? Is your build slow?\r\n\r\nServer-driven UI might be the solution to your problems. In this talk, I will discuss how we designed a multi-platform system to build new screens via a simple backend change without having to release new versions of the native apps.\r\n\r\nAfter this talk, you will be able to ship features faster on all platforms simultaneously, you will notice that life is too short to develop only for Android.",
        "startsAt": "2022-09-01T11:50:00",
        "endsAt": "2022-09-01T12:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "1ee57fa9-790a-4a61-a980-6ef301818aea",
            "name": "Zhenlei Ji"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45652,
                "name": "Introductory and overview"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24363,
        "room": "Hamilton",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "353186",
        "title": "Jetpack Compose and SwiftUI: A side-by-side comparison",
        "description": "Android and iOS have both begun to invest in declarative UI frameworks as their UI frameworks of the future. Compose and SwiftUI have many similarities that allow for a shared understanding of how to approach UI development, allowing each platform to learn from each other. At the New York Times we’ve leveraged this to have a common understanding of how we do UI development and be able to communicate across platforms and functions more easily. We will go through some examples on both platforms.",
        "startsAt": "2022-09-01T13:40:00",
        "endsAt": "2022-09-01T14:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "c6924bb7-c987-4f12-baf0-0d9b02bfa9ac",
            "name": "Jamal Rogers"
          },
          {
            "id": "398d258b-0286-4927-85ef-dc247b8a4bfe",
            "name": "David Morant"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45652,
                "name": "Introductory and overview"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45655,
                "name": "Lightning talk"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45670,
                "name": "Libraries"
              },
              {
                "id": 45675,
                "name": "UI/UX"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24363,
        "room": "Hamilton",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "353735",
        "title": "Memory Leaks & Performance Considerations: A Cookbook",
        "description": "Out in the wild, Android faces real-life challenges that affect performance and battery life. For example, not everyone has unlimited data in their mobile plans, or reliable connectivity. The reality is that Android apps must compete with one another for limited resources.\r\n\r\nFrom the newly published O'Reilly book \"Programming Android with Kotlin: Achieving Structured Concurrency with Coroutines\", this talk examines a range of memory leaks in concurrency clashing lifecycles, network data format, and more.\r\n\r\nPerformance considerations allow you to examine concerns that may impact your application’s ability to scale. If you can use any of these strategies as “low-hanging fruit” in your code base, it’s well worth going for the biggest win with the smallest amount of effort.",
        "startsAt": "2022-09-01T13:40:00",
        "endsAt": "2022-09-01T14:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "a4d26fc1-9707-4c86-bc82-70b7ce05823c",
            "name": "Amanda Hinchman-Dominguez"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45654,
                "name": "Advanced"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [],
            "sort": 1001
          }
        ],
        "roomId": 27013,
        "room": "Liskov",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "352394",
        "title": "Migration without Migraines: Automatic Migration at Scale",
        "description": "Engineers from Square have presented about the Workflow framework at Droidcon 4 different times before. Over the past 4 years we have continued to evolve and improve the library, including some API changes. The usage continues to grow, making up over 70% of Square Android application screens but over those 4 years we ended up with 4 different versions of Workflow in use in the codebase at the same time. In this talk we’ll tell you a story of consolidating the API over the huge megarepo, and a migration of more than 500 screens to a single version of the framework.\r\n\r\nLearning Points:\r\n- How one can use code static analysis tools such as ktlint to aid in an API migration that is not possible as entirely mechanical (i.e. without engineer critical thinking).\r\n- The importance of quick, visible feedback to migration efforts.\r\n- The value of ease-of-use and satisfaction for developers with migration tools.",
        "startsAt": "2022-09-01T13:40:00",
        "endsAt": "2022-09-01T14:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "82097a52-8b7b-4a15-afe7-4a19ebd8e527",
            "name": "Oleg Godovykh"
          },
          {
            "id": "d5139721-f322-4900-a123-3be7791d318c",
            "name": "Stephen Edwards"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45658,
                "name": "Tooling"
              },
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              },
              {
                "id": 45670,
                "name": "Libraries"
              },
              {
                "id": 45674,
                "name": "Android Studio"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24364,
        "room": "Hopper",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "353736",
        "title": "Native UI with multiplatform Compose",
        "description": "Compose is a delightful way to build UI in Kotlin, but Compose UI doesn't always make sense (or exist) on platforms like the web and iOS. React Native uses the native UI toolkit of each platform, but requires JavaScript and is always chasing compatibility with each platform's new features.\r\n\r\nRedwood is a new tool from Cash App which lets you keep writing Kotlin and Compose but target the native UI toolkit of each platform.\r\n\r\nThis session will introduce Redwood by:\r\n\r\n- Comparing and contrasting it with other cross-platform tools\r\n- Demonstrate its differentiating features in samples and production usage\r\n- Document the internal architecture of how it works\r\n- Using it to update screens outside of the app store process",
        "startsAt": "2022-09-01T13:40:00",
        "endsAt": "2022-09-01T14:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "3eabdd46-6cb5-4083-9eb8-1ad9a3b7a5eb",
            "name": "Jake Wharton"
          },
          {
            "id": "4a13d160-c8c3-4214-926f-24a5b15c78dd",
            "name": "Jesse Wilson"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45660,
                "name": "Cross-Platform"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24362,
        "room": "Lovelace",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "332216",
        "title": "What's on tonight? New developments in Android and Google TV",
        "description": "Discover the latest from Android TV and Google TV, including a recap of Android 12 updates and what’s available in the developer preview for Android 13.\r\n\r\nExplore ways of connecting with your TV users through new experiences like multitasking and optimized layouts to support resizable windows and 4K UIs, as well as through improvements in performance and quality, including supporting frame rate switching, audio routes and keyboard layouts and accessibility. We’ll see how to make use of new validation tools to build native experiences across a variety of living room configurations.",
        "startsAt": "2022-09-01T13:40:00",
        "endsAt": "2022-09-01T14:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "f89ea766-4af9-4b88-8842-ede574e4c648",
            "name": "Paul Lammertsma"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27014,
        "room": "Booth",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "360314",
        "title": "Expand your Android app beyond the phone with Amazon Appstore",
        "description": "We all know Android Apps are expanding beyond the phone screen, so Amazon Appstore is bringing your Android apps to the desktop! Join me as we explore how you can use Windows Subsystem for Android and the Amazon Appstore to optimise your Android Apps for a large screen.\r\n\r\nKey takeaways: \r\n- How to bring your App to Desktop\r\n- Optimising for the large screen\r\n- Creating responsive UI’s",
        "startsAt": "2022-09-01T14:30:00",
        "endsAt": "2022-09-01T15:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "de33fa5b-79f7-4036-92c4-22d552159db4",
            "name": "Anisha Malde"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27014,
        "room": "Booth",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "375807",
        "title": "Integrating Kotlin/JS in a Kotlin Multiplatform library",
        "description": "Javascript is one of the supported targets for a Kotlin Multiplatform project. One can add Kotlin/JS target to an existing Kotlin Multiplatform Mobile library to output a JS library code. \r\n\r\nThere are various aspects to consider for the Kotlin/JS integration,\r\n• Supporting JavaScript or Typescript\r\n• Gradle configuration\r\n• Exposing Kotlin code to JavaScript and writing JS-specific code\r\n• JS Library size and impact of third-party libraries\r\n• Architectural decisions around shared code across platforms, networking, storage, serialization, etc.\r\n\r\nThis talk discusses how to deal with the issues mentioned above and more.\r\n",
        "startsAt": "2022-09-01T14:30:00",
        "endsAt": "2022-09-01T15:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "3e2c28d7-69c9-48b8-b6fc-ebe1b0442e1d",
            "name": "Jigar Brahmbhatt"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45652,
                "name": "Introductory and overview"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24362,
        "room": "Lovelace",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "371793",
        "title": "Mobile DevOps - How CI/CD can change your development world",
        "description": "We will be discussing what Mobile DevOps and CI/CD really is and how to develop your own CI/CD pipeline to save you and your company time and money. We will also go over the built in Workflows offered by Bitrise that automate the CI/CD process and provide a live demo on creating unique Steps developers can add to their own Workflows.",
        "startsAt": "2022-09-01T14:30:00",
        "endsAt": "2022-09-01T15:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "614d042d-5ba2-4011-aacf-bcce5975bbb4",
            "name": "Leilah Squires"
          },
          {
            "id": "07bc107d-a03e-48cc-a81a-6cf317f8417a",
            "name": "Sujit Poudel"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45652,
                "name": "Introductory and overview"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45658,
                "name": "Tooling"
              },
              {
                "id": 45659,
                "name": "CI/CD"
              },
              {
                "id": 45663,
                "name": "Android"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27013,
        "room": "Liskov",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "284549",
        "title": "Opening the shutter on snapshots",
        "description": "Jetpack Compose shows the power of a custom compiler plugin. But not all the magic happens during compilation. A lot of Compose features are based on a runtime library that doesn't require any compiler support: the snapshot system. It might seem like magic at first, but it's just built on top of things you might already know: ThreadLocals, linked lists, and, yes, even regular old callbacks. Once you understand how Compose thinks about state, you might find ways to use its tools in your own code – even outside of Compose.\r\n",
        "startsAt": "2022-09-01T14:30:00",
        "endsAt": "2022-09-01T15:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "a7014862-d295-4714-82ca-aee3201c22dc",
            "name": "Zach Klippenstein"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              },
              {
                "id": 45670,
                "name": "Libraries"
              },
              {
                "id": 45675,
                "name": "UI/UX"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24364,
        "room": "Hopper",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "371205",
        "title": "Snapshot testing (and more!) with Paparazzi 📸",
        "description": "Unit tests allow you refactor your code with confidence and usually run blazingly fast!\r\n\r\nBut how do you ensure that your UI looks as expected?  Espresso tests are hard to set up, prone to flakiness and require APKs, emulators, dexing, ADB...ugh.\r\n\r\nCome find out how we're improving the UI testing loop on Cash App with Paparazzi -- an Android testing library to render your application screens without a physical device or emulator!\r\n\r\nThis talk will explore both the use cases for Paparazzi, as well go under the hood discussing its interaction with LayoutLib, the driver behind Android Studio's Layout Inspector feature.  It'll also introduce and/or discuss exciting new upcoming features.",
        "startsAt": "2022-09-01T14:30:00",
        "endsAt": "2022-09-01T15:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "903c7a65-63f0-4244-8f8c-7ab8f7acae75",
            "name": "John Rodriguez"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45658,
                "name": "Tooling"
              },
              {
                "id": 45659,
                "name": "CI/CD"
              },
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45666,
                "name": "Testing"
              },
              {
                "id": 45674,
                "name": "Android Studio"
              },
              {
                "id": 45675,
                "name": "UI/UX"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24363,
        "room": "Hamilton",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "353204",
        "title": "Behind The Screen: The Humans Who Use Our Code",
        "description": "Android has been around for over 10 years, and has now become the most used operating system in the entire world. It is the go to operating system for all kinds of user facing devices. From car displays and airplane entertainment systems, to fitness gear and points of sale, users are having countless interactions with Android. Sometimes without even realizing it. Android reaches humans from all walks of life and it is our responsibility to make them feel welcome and help keep them safe.\r\n\r\nThis talk will cover key considerations to add to your engineering practice. Not all users use their devices the same way and we will learn about many styles of interaction. Advocate for the user. Learn how to recognize and push back against dark patterns before they make their way into the public.\r\n\r\nBy putting these skills into practice, Android will continue to grow and be recognized as a great platform for all, and together we can ensure this happens.",
        "startsAt": "2022-09-01T15:20:00",
        "endsAt": "2022-09-01T16:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "598e1141-ce68-4cb2-8e9d-d8c9f5add09c",
            "name": "Matt McKenna"
          },
          {
            "id": "b9af7051-03c3-4595-88ca-a1825112ece4",
            "name": "Adam McNeilly"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45652,
                "name": "Introductory and overview"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27013,
        "room": "Liskov",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "345381",
        "title": "Keeping your team's Gradle builds in top shape",
        "description": "Which tasks are having cache misses?\r\nWho has the slowest builds on my team?\r\nWhich task is getting the most cache misses?\r\nThese questions and more can be easily answered with the new Gradle Enterprise API.\r\nCome learn about how to automatically check your build's cacheability and find out who on your team is suffering the most painful builds.",
        "startsAt": "2022-09-01T15:20:00",
        "endsAt": "2022-09-01T16:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "89694c9d-5de0-4f39-a50a-ed48d6eb56ca",
            "name": "Nelson Osacky"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45672,
                "name": "Gradle"
              },
              {
                "id": 45677,
                "name": "Modularization"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27014,
        "room": "Booth",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "260220",
        "title": "Kotlin Adoption in the Giant Java Application",
        "description": "Usually, Kotlin adoption is a smooth process: do some initial configuration and then follow the typical flow \"writing code → building code → shipping code\". But turns out this experience does not scale well for a really big project.\r\n\r\nTwo Sergeys will walk you through the Kotlin adoption journey at Meta. You will learn what problems speakers have encountered while trying to bring a new programming language into the biggest mobile codebase: from infrastructure support to hardcode JVM bytecode optimizations. Contains bloody DEX code.",
        "startsAt": "2022-09-01T15:20:00",
        "endsAt": "2022-09-01T16:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "77e73f64-4900-4f8d-9488-2e375290d71b",
            "name": "Sergey Ryabov"
          },
          {
            "id": "8466c9d8-0d23-41da-a283-80632a241057",
            "name": "Sergei Rybalkin"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45654,
                "name": "Advanced"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45658,
                "name": "Tooling"
              },
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24364,
        "room": "Hopper",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "353089",
        "title": "Model-driven navigation with Jetpack Compose – From zero to hero",
        "description": "Do we think of navigation as a UI-related concept, or can it be business logic-first? Where are the boundaries between navigation, application state, and animation? \r\n\r\nIn this talk, we’ll take a journey through an evolution of ideas from the barebones to the mind-blowing, powered by Jetpack Compose – and discover an entirely new perspective on what we consider navigation.",
        "startsAt": "2022-09-01T15:20:00",
        "endsAt": "2022-09-01T16:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "94bb39bf-8256-4633-adcd-54d621242cea",
            "name": "Zsolt Kocsi"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45654,
                "name": "Advanced"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45677,
                "name": "Modularization"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24362,
        "room": "Lovelace",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "353169",
        "title": "Overview of UI testing in Compose",
        "description": "Jetpack Compose has no views, so how do we test it? Come learn about the basics of UI testing in Jetpack Compose.",
        "startsAt": "2022-09-01T15:20:00",
        "endsAt": "2022-09-01T16:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "b308cbd1-215d-461a-8b10-8814798ab6f8",
            "name": "Michael Bailey"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [],
            "sort": 1001
          }
        ],
        "roomId": 24363,
        "room": "Hamilton",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "353673",
        "title": "A Journey to Building a Server Driven UI Framework",
        "description": "As companies merge, they often contend with duplicated tech-stacks. Beyond the technical infrastructure, users now expect dynamic and personalized experiences. Here is SiriusXM + Pandora’s journey to combining forces and building a scalable Server Driven UI framework that will power 150 million listeners across multiple audio brands. \r\n\r\nTo take that one step further, our Android Team faces the challenge of not only powering multiple brands, but also a vast array of device form factors (mobile, automotive, TV…). This emphasized the importance of a modular architecture and the need to SDKify our client logic. Bonus: our team adopted Jetpack Compose along the way.\r\n\r\nIn this session we will discuss modularization, scalable architecture, and UI/UX (including Jetpack Compose). \r\n",
        "startsAt": "2022-09-01T16:10:00",
        "endsAt": "2022-09-01T16:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "86223c3e-2244-491e-ba4e-5fa783312f93",
            "name": "Thomas Wolf"
          },
          {
            "id": "57d2c9da-956c-4adf-a684-2d4d56bdaf68",
            "name": "Stuart Horner"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              },
              {
                "id": 45670,
                "name": "Libraries"
              },
              {
                "id": 45675,
                "name": "UI/UX"
              },
              {
                "id": 45677,
                "name": "Modularization"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24362,
        "room": "Lovelace",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "357580",
        "title": "Beyond the Basics: Performance Monitoring and User Experience for Mobile App Growth",
        "description": "When interacting with a mobile app that regularly crashes or freezes, 53% of users uninstalled the app, 37% stopped using it, and 28% looked for a replacement. Users are no longer forgiving mobile app mishaps and errors. Going beyond the basic metrics of understanding your user experience and diving deep into mobile performance is key to ensuring growth and positive user experiences. We will highlight which metrics and takeaways mobile teams should track to create a superior app experience that takes into account every user interaction. Find out why app insights, proactive issue detection, advanced debugging, and alert management capabilities should matter to you and the development of your mobile app.\r\n",
        "startsAt": "2022-09-01T16:10:00",
        "endsAt": "2022-09-01T16:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "cb34c7ba-0919-4e7b-839c-de46e80ac3bf",
            "name": "Moataz Soliman"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45679,
                "name": "sponsor"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27014,
        "room": "Booth",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "353656",
        "title": "Exploring Dynamic Feature Modules",
        "description": "Dynamic Feature Modules were announced in 2018 as a new way to modularize and deliver Android apps. It presents a way to decouple features entirely from one another, and avoid a \"monoapp\" which depends on all code in one place. It has benefits to compile times, app installation size, and enables instant apps - but the feature has had little buzz since then, unknown adoption, and seemingly goes unmaintained now.\r\n\r\nLet's change that!\r\n\r\nIn this talk we'll spend a bit of time reintroducing the dynamic feature Gradle plugin and explain what it's used for, showcase how to extend an existing monoapp with dynamic features, start a new app from scratch and include your existing monoapp as a feature, and uncover all of the gotchas and oddities while doing it.",
        "startsAt": "2022-09-01T16:10:00",
        "endsAt": "2022-09-01T16:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "88a3b935-5309-4616-be03-115faffb81dd",
            "name": "Alec Strong"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45658,
                "name": "Tooling"
              },
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45672,
                "name": "Gradle"
              },
              {
                "id": 45677,
                "name": "Modularization"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24363,
        "room": "Hamilton",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "355732",
        "title": "Mastering the mobile testing pyramid",
        "description": "For too many years mobile test automation has been an oft promised but elusive dream. After working with hundreds of mobile application companies in his role as co-founder & CTO of Waldo, Laurent Sigal will take you through the guiding principles and practical steps necessary to create the infrastructure to actually build out effective mobile test automation.",
        "startsAt": "2022-09-01T16:10:00",
        "endsAt": "2022-09-01T16:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "b7839fd8-cf66-4644-8a99-f38afa129801",
            "name": "Laurent Sigal"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45658,
                "name": "Tooling"
              },
              {
                "id": 45659,
                "name": "CI/CD"
              },
              {
                "id": 45666,
                "name": "Testing"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24364,
        "room": "Hopper",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "353180",
        "title": "The future of dependency management, seen from 2022",
        "description": "Dependency management in the Kotlin, in the Android, and in the JVM ecosystems is great, especially for Gradle users, but there's room for improvement.\r\n\r\nSome tasks, like upgrading dependencies to the right versions, are still tedious and time consuming. There's also compatibility gotchas because of the lack of metadata.\r\n\r\nThis talk will start with a mention of the different problems that come with dependency management in real-world projects. Then, we will see what Gradle's new \"Version catalogs\" can do for us. Then it'll show how the developer tool refreshVersions (MIT licensed) tackles some of these issues in Gradle projects, saving a lot of time when upgrading dependencies.\r\n\r\nFinally, I'll talk about what the future can be for dependency management, be it from new features in future Gradle versions, or tools or conventions that the community can create to improve the status quo.",
        "startsAt": "2022-09-01T16:10:00",
        "endsAt": "2022-09-01T16:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "7c1cede6-5f59-46bb-ad1e-22b63758dae7",
            "name": "Louis cad"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45658,
                "name": "Tooling"
              },
              {
                "id": 45670,
                "name": "Libraries"
              },
              {
                "id": 45672,
                "name": "Gradle"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27013,
        "room": "Liskov",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "325948",
        "title": "Architecture at Scale",
        "description": "How about unidirectional data flow in an architecture where views and presenters don’t know about each other? While growing up to 40+ engineers and 600+ modules, Cash App managed to control the complexity of its product. Views can be written in either Kotlin or XML; presenters with either Rx, Coroutines, or Compose; no problem. We test views on the JVM and we don’t need to define fake presenters either.\r\n\r\nWriting new screens is delightful and we’ll see how we made it possible by:\r\n- Looking at the foundations of the architecture: our internal navigation library which allows clear modularity,\r\n- Checking how it can adapt to presenters using different technologies,\r\n- Explaining how views are defined and tested,\r\n- Seeing how everything is glued together from a bird’s-eye view of the app.\r\n\r\nGrowing your app and team doesn’t imply more pain nor more complexity. Attendees will gain a sound understanding about how we achieved it.\r\n",
        "startsAt": "2022-09-01T17:00:00",
        "endsAt": "2022-09-01T17:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "449b4215-55cc-444f-8ff4-b0c434a96019",
            "name": "Benoit Quenaudon"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45652,
                "name": "Introductory and overview"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24363,
        "room": "Hamilton",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283989",
        "title": "Composing With Confidence",
        "description": "As developers, a crucial function of our job is shipping reliable bug-free code. A great way to support that is through testing - ensuring our code behaves as expected and allowing us to ship with certainty. In this presentation, we’ll look at the available testing APIs for Jetpack Compose and how they can help us gain confidence in our products. You’ll leave the presentation with an understanding of how to find and interact with the elements on the screen, as well as how to make your tests easy to write and easy to maintain. ",
        "startsAt": "2022-09-01T17:00:00",
        "endsAt": "2022-09-01T17:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "b9af7051-03c3-4595-88ca-a1825112ece4",
            "name": "Adam McNeilly"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45666,
                "name": "Testing"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24362,
        "room": "Lovelace",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "353466",
        "title": "Multi-device Development",
        "description": "Developers play a critical role in Google's multi-device ecosystem. Come hear about the tools that we're making available to you so that you can build your own powerful multi-device experiences that span platforms and form factors. We'll share on the following:\r\n- Detailed overview of our new Cross device APIs\r\n- Highlights of our upcoming simulation testing tool which will help it make it easy to build, instrument, and test multi-device experiences\r\n\r\nWe've given this talk previously at Google I/O (https://io.google/2022/program/2d35bc51-fef8-4f4f-830f-0dba6d30e592/). For this talk in September, the APIs will be already be live so we'll be able to go into the APIs in more detail as well as cover our upcoming testing tools.\r\n\r\nExperience level with the topic - Ryan is the lead Engineering Manager for these APIs",
        "startsAt": "2022-09-01T17:00:00",
        "endsAt": "2022-09-01T17:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "8b268f9b-5049-4115-a8c7-3bfaa86a5207",
            "name": "Ryan Ausanka-Crues"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45660,
                "name": "Cross-Platform"
              },
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45666,
                "name": "Testing"
              },
              {
                "id": 45670,
                "name": "Libraries"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27013,
        "room": "Liskov",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "289217",
        "title": "Observability of your app in production",
        "description": "Just shipped your app to the Play Store for the first time? You'll want to make sure you have visibility into what is going on in the wild. We'll go through an overview of some of the most useful and often free tools, such as Play Store vitals; Firebase reporting; logging, and performance monitoring.\r\nYou'll leave this talk with the knowledge to help improve the quality of your app and avoid fire fighting in production.",
        "startsAt": "2022-09-01T17:00:00",
        "endsAt": "2022-09-01T17:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "355899b3-60c9-43ec-9b86-514d5ae81cb3",
            "name": "Kurt Nelson"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45652,
                "name": "Introductory and overview"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45659,
                "name": "CI/CD"
              },
              {
                "id": 45666,
                "name": "Testing"
              },
              {
                "id": 45676,
                "name": "Firebase"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27014,
        "room": "Booth",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "271547",
        "title": "A Hitchhiker's Guide to Compose Compiler:  Composers, Compiler Plugins, and Snapshots",
        "description": "If you are an Android Developer, chances are you are pretty excited about Jetpack Compose! But how does it work? In this talk, we will take you along the journey of a Composable function, from being written, going through the unknown lands of the Kotlin and Compose compilers to being executed and displaying UI!  \r\n\r\nFrom Composables all the way down into the compiler plugins, we expose the metaprogramming responsible for all the \"magic\". Whether your interest is Jetpack Compose, compilers, or code transformations, this talk takes an otherwise complicated topic and makes it digestible for everybody by diving into specific features offered by Compose.\r\n\r\nBy examining Compose's snapshot system,  you'll follow the compiler phases down to intercepting code transformations with IR. By recognizing the patterns that make it hard for Compose to generate efficient code, and this can help us to recognize patterns to use for performance.",
        "startsAt": "2022-09-02T09:00:00",
        "endsAt": "2022-09-02T09:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "c03a7211-54ff-4819-9789-1a22ed91fafc",
            "name": "Jossi Wolf"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24363,
        "room": "Hamilton",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "347903",
        "title": "Adopting Kotlin Multiplatform In Brownfield Applications",
        "description": "How can your team start sharing code with Kotlin Multiplatform? This is a simple question for a complex, and nuanced challenge.\r\n\r\nOver the past year, our team has invested into Kotlin Multiplatform for both our iOS and Android applications. In this talk, we'll discuss our lessons learned and highlight how to solve key challenges including:\r\n- Getting organizational buy in\r\n- Configuring a multi-artifact build\r\n- Building a CI/CD pipeline\r\n- Publishing .jar, .aar, and Swift Packages\r\n- Integration into brownfield applications\r\n- Optimizing developer experience\r\n\r\nBy the end of this talk, you should have a clear technical and product roadmap for integrating Kotlin Multiplatform into your apps.",
        "startsAt": "2022-09-02T09:00:00",
        "endsAt": "2022-09-02T09:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "0127e4da-5685-4f5b-80f4-5e1805f993d8",
            "name": "Nate Ebel"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45659,
                "name": "CI/CD"
              },
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              },
              {
                "id": 45672,
                "name": "Gradle"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24362,
        "room": "Lovelace",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "351622",
        "title": "Advanced techniques for building Kotlin DSL(s)",
        "description": "How to create Kotlin DSL that looks like the syntax of a programming language?\r\nI would like to talk about advanced techniques for creating any kind of Kotlin DSL(s) in this talk.\r\nAs an example, we will see how to build a DSL that looks like a Starlark programming language, a Python dialect used for writing build scripts for Bazel build system. This DSL is a declarative code generator that builds an abstract syntax tree of a Starlark language and then generates a formatted code based on it.\r\nHowever, all the concepts described in this talk are applicable to any kind of Kotlin DSL(s) including ones for Android projects. \r\n\r\nSuch a DSL was briefly mentioned in my talk at droidcon SF 2022: https://www.sf.droidcon.com/speaker/pavlo-stavytskyi/automated-migration-of-android-apps-to-bazel-build-system However, In this talk, I would like to dive deeper into the implementation details of such a DSL to demonstrate some neat things Kotlin allows to achieve in this area.",
        "startsAt": "2022-09-02T09:00:00",
        "endsAt": "2022-09-02T09:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "e851ff26-d617-416f-81d4-943bad64139a",
            "name": "Pavlo Stavytskyi"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45654,
                "name": "Advanced"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45664,
                "name": "Kotlin"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24364,
        "room": "Hopper",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "331067",
        "title": "Android Benchmarking and other stories",
        "description": "Benchmarking is a topic that will help you to take your app to the next level. Apps face bottlenecks and performance issues as they grow, and often continuing good programming practices will not suffice to keep their behavior on track. Integration of third-party APIs, complex access to hardware or just pushing the limits of what Android offers can often lead to a slower and buggier app. \r\n\r\n\r\nWith a proper benchmark strategy, you will be able to identify and resolve issues on your app before they become too big. This talk showcases the newly released framework from Google, JankStats, and how to use it on a real-world app. We will compare it with other already existing Google solutions. As a bonus, we will cover strategies and scenarios where we can integrate our benchmark suits on a CI/CD platform and keep track of regressions and improvements on our app.",
        "startsAt": "2022-09-02T09:00:00",
        "endsAt": "2022-09-02T09:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "2f606e32-997a-4b74-8420-76a47e7d66a3",
            "name": "Enrique Lopez Mañas"
          },
          {
            "id": "b15402bf-4607-4ac8-a06c-2a0d3cb3c68b",
            "name": "Iury Souza"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45658,
                "name": "Tooling"
              },
              {
                "id": 45659,
                "name": "CI/CD"
              },
              {
                "id": 45663,
                "name": "Android"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27013,
        "room": "Liskov",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "355178",
        "title": "Netflix + Gradle A Journey in Developer Productivity",
        "description": "A case study on how Netflix and Gradle have been working together to optimize Netflix Android builds, find bottlenecks, and improve developer productivity. Emmanuel Boudrant from Netflix and Rooz Mohazzabi from Gradle will share wins and findings from their journey on...\r\n\r\nHow Netflix does builds\r\n- Gradle / AGP / Android Studio\r\n- Build Scans, Gradle profiler\r\n- CI / CD\r\nThe Developer Productivity Journey\r\n- The first build scan\r\n- Build caching, who’s using it? Who’s Not?\r\n- Identifying build performance bottlenecks\r\n- Enabling local and remote build caching\r\nBuild Performance Regressions: One year later, the usual suspects are back\r\n- Android SDK and JDK version\r\n- CI vs Local cache-miss\r\n- Setting up Android properties properly\r\n- Dagger and other annotation processors\r\nBuild properties case with modularisation\r\n- How dependency injection helped\r\n",
        "startsAt": "2022-09-02T09:00:00",
        "endsAt": "2022-09-02T09:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "daa0a0df-2968-4daa-8b6a-be08139f4bde",
            "name": "Emmanuel Boudrant"
          },
          {
            "id": "128253aa-c170-4a08-816e-66b3521b889f",
            "name": "Rooz Mohazzabi"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45658,
                "name": "Tooling"
              },
              {
                "id": 45659,
                "name": "CI/CD"
              },
              {
                "id": 45672,
                "name": "Gradle"
              },
              {
                "id": 45677,
                "name": "Modularization"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27014,
        "room": "Booth",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "252188",
        "title": "An Opinionated, Gradle-Based Approach to Automated Version Management",
        "description": "Managing your app's release names and numbers is often a manual process, hindering automated CI/CD initiatives. Many teams designate a specific team member to increment the required versionCode/versionName fields, manually push/pull releases branches into downstream branches, and resolve merge conflicts when hotfixing version-related issues. \r\n\r\nWith proper Gradle architecture, these pesky versioning tasks can be fully self-deriving, require no manual intervention whatsoever, and support a truly automated CI/CD pipeline. \r\n\r\nThis talk will focus on an opinionated approach to addressing these problems, as well as the practical lessons learned after rearchitecting a modern, agile-centric CI/CD pipeline for a big-name app with millions of users.",
        "startsAt": "2022-09-02T09:50:00",
        "endsAt": "2022-09-02T10:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "d6dfb285-8c91-406e-a885-507cc8bce571",
            "name": "Cullen Shannon"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45658,
                "name": "Tooling"
              },
              {
                "id": 45659,
                "name": "CI/CD"
              },
              {
                "id": 45672,
                "name": "Gradle"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24364,
        "room": "Hopper",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "342043",
        "title": "Building Multi-Platform Projects with MVI Architecture",
        "description": "For modern applications, targeting multiple platforms has become table-stakes. That can be an insurmountable challenge for a team working on a project with limited resources. Kotlin Multiplatform is a promising solution to this problem, allowing you to target mobile platforms and the web. \r\n\r\nThe strength of Kotlin Multiplatform is that it allows you to write _native_ applications, unlike cross-platform frameworks like React-Native and Flutter. While having access to native APIs can lead to a superior user experience, you need to be careful to avoid code duplication. \r\n\r\nWe've decided to embrace the Kotlin multiplatform approach at my company, convinced it will help us build better quality products. And in this talk, I will show how we've used MVI architecture patterns to help us maximize code sharing.",
        "startsAt": "2022-09-02T09:50:00",
        "endsAt": "2022-09-02T10:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "878ec0bb-f4d7-4b83-a9af-ff6e359a35dc",
            "name": "Etienne Caron"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45660,
                "name": "Cross-Platform"
              },
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27013,
        "room": "Liskov",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "353675",
        "title": "Composable Sheep: A Canvas Story",
        "description": "Let's take a dive into the world of Canvas and build something fun! Let's go through the basics and shed some light at the daunting numbers and formulas that tend to get in the way.\r\n\r\nIn this talk, we'll learn how Compose Canvas works and how we can use it to draw complex UI. We'll start from the basics (like what is Canvas) and end up with more complex examples involving Paths and chained drawings. Using sheep as example, of course!\r\n\r\nAt the end of this talk, you should have a good understanding of the different tools the Canvas API has to offer and how to combine the simple out-of-the-box APIs to create fun and interesting UI.\r\n\r\nCanvas used to be a convoluted ordeal, but in this story I'll show you how that's no longer the case :) ",
        "startsAt": "2022-09-02T09:50:00",
        "endsAt": "2022-09-02T10:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "94ba4fa4-aed7-482e-8096-f61090d5bb4d",
            "name": "Nicole Terc"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45652,
                "name": "Introductory and overview"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              },
              {
                "id": 45665,
                "name": "Design"
              },
              {
                "id": 45675,
                "name": "UI/UX"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24363,
        "room": "Hamilton",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "347680",
        "title": "The ever increasing convergence of native iOS and Android  mobile development",
        "description": "This talk will illustrate with examples where we find ourselves today in the world of iOS and Android mobile development with the ever increasing convergence of the languages and frameworks we're using, covering for example how similar the following are.\r\n\r\n- Swift/Kotlin\r\n- SwiftUI/Compose\r\n- Swift 5.5/Kotlin concurrency frameworks",
        "startsAt": "2022-09-02T09:50:00",
        "endsAt": "2022-09-02T10:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "0392772c-28d4-47f6-bd39-47d743fb4a81",
            "name": "John O'Reilly"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45660,
                "name": "Cross-Platform"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              },
              {
                "id": 45668,
                "name": "Coroutines"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24362,
        "room": "Lovelace",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "327255",
        "title": "The Real MVP: Going from idea to users' hands!",
        "description": "You have an idea for a new app. You've secured buy-in from the business. What's next? The MVP. But what does it take to ship a new app these days? What are the challenges you'll inevitably face? How should you approach the architecture? What are the technical decisions you'll need to make?\r\n\r\nYou'll learn the answers to those questions and more in this talk. We'll discuss how to conduct initial user research, the development process, and how to work with Marketing to promote your MVP.\r\n\r\nJoin me on the journey from idea to users' hands!",
        "startsAt": "2022-09-02T09:50:00",
        "endsAt": "2022-09-02T10:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "7696a516-13da-40d7-bf15-70dda1317955",
            "name": "Annyce Davis"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45652,
                "name": "Introductory and overview"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45660,
                "name": "Cross-Platform"
              },
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27014,
        "room": "Booth",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "357884",
        "title": "Creative Coding with Compose",
        "description": "Creative coding is the concept of creating something expressive rather than functional, a bridge between the realms of art and tech. It’s the basis for creative data visualization, art installations, interaction design, and even games.\r\n\r\nOn Android, Jetpack Compose’s amazing APIs make creative coding more approachable than before!\r\n\r\nWe’ll cover the basic concepts that fall under creative coding such as generative and interactive art. \r\nWithin that landscape, we’ll explore how Compose can be leveraged to realize some of those ideas with a few examples.\r\nThese explorations should leave us with a starter set of tools that can be applied to other creative coding endeavors, to enhance functional UX, or even just to play around with for fun!\r\n\r\n\r\nPS: yes, there will be some math :)",
        "startsAt": "2022-09-02T10:40:00",
        "endsAt": "2022-09-02T11:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "cdc513e8-cd46-49d8-a3d1-ac2ec53d11c6",
            "name": "Tasha Ramesh"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45668,
                "name": "Coroutines"
              },
              {
                "id": 45675,
                "name": "UI/UX"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24363,
        "room": "Hamilton",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "354666",
        "title": "How the Android Framework Monitors, Processes, and Triggers ANRs",
        "description": "Here’s everything you wish you knew about ANRs.\r\nThis is your opportunity to get a wider picture of ANRs so you can better understand how your code is resulting in frozen user experiences. After all, there’s a lot more to eliminating ANRs than just preventing the main thread from being blocked for 5 seconds.\r\n\r\nGoogle Play Console stack traces frequently point to code that was not responsible, which leads to endless dead ends and frustration. In addition, the Android documentation does not spell out all the time thresholds that cause ANRs to be triggered at the OS level.\r\n\r\nWe’ll take a deep dive into how ANRs are monitored, processed, and triggered at the OS level, providing mobile engineers with a better understanding of how they can protect their apps from ANRs:\r\n\r\n-How the OS triggers ANRs in Activities, Services, BroadcastReceivers, and ContentProviders\r\n-What data is collected by the OS for each type of ANR\r\n-Why Firebase Crashlytics and Google Play Console display different ANR data\r\n-What are the different approaches to detecting ANRs in production\r\n-Embrace’s approach to solving ANRs via stack trace flame graphs",
        "startsAt": "2022-09-02T10:40:00",
        "endsAt": "2022-09-02T11:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "12add3e1-cf45-4287-aa6a-c459c0e3e1d3",
            "name": "Fredric Newberg"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45654,
                "name": "Advanced"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45655,
                "name": "Lightning talk"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45658,
                "name": "Tooling"
              },
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45665,
                "name": "Design"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45681,
                "name": "enterprise"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27014,
        "room": "Booth",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "289242",
        "title": "Jetpack Paging Library 3 in Real Life",
        "description": "A walkthrough on how to implement Jetpack's paging library 3 in a real-world application.\r\nUsing pagination is a very common practice in many apps, and Jetpack's paging library can help reduce the burden by a lot.\r\nBut most of the guides out there are focused on the most simple yet not so common use of it.\r\nIn my talk, I want to show how we used it in viz.ai in an app that requires different filters/tabs, synching server with local cache (using room), and responding to user actions.\r\nPlus, I'm going to give my review of this library and what I think its pros and cons are.",
        "startsAt": "2022-09-02T10:40:00",
        "endsAt": "2022-09-02T11:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "3192eb25-047c-4d7e-874a-53206c185074",
            "name": "Orel Zion"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45652,
                "name": "Introductory and overview"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45664,
                "name": "Kotlin"
              },
              {
                "id": 45668,
                "name": "Coroutines"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24364,
        "room": "Hopper",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "345773",
        "title": "Optimizing Render Performance of Jetpack Compose",
        "description": "Jetpack Compose is a great new way of doing Android UI development, but the first run can feel a bit on the slow side.  In this talk, we'll go over ways to use Compose that are fast, ways to use Compose that are slow, and 6 practical tips to improve render performance in our applications in production. \r\n\r\nWe'll talk about: \r\n- Understanding the options for introducing Compose to your project and how they impact render time\r\n- Configuring R8 to optimize Compose performance\r\n- Memoizing business logic to increase composition speed \r\n- Understanding causes of unnecessary recomposition\r\n- Using keys on lists and elements to speed up UI changes \r\n- Understanding how ProfileInstaller can pre-compile JIT profiles",
        "startsAt": "2022-09-02T10:40:00",
        "endsAt": "2022-09-02T11:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "c85ef56e-4c2e-41d9-8b9b-823ff9071eeb",
            "name": "Will Shelor"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45654,
                "name": "Advanced"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24362,
        "room": "Lovelace",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "352553",
        "title": "The Future of Design is Still Personal: Reaching Toward True Adaptation",
        "description": "The discipline of design has historically produced fixed products. Even the term \"product\" implies the end of a process, or something that is completed and typically unchanging. But we know that the intent of the designer and of the person experiencing the design are engaged in an ongoing conversation. Digital products have drastically increased the pace of that conversation, introducing faster iteration, new modes of interaction, and – importantly – space to imagine a future in which a person's intent directly defines their experience of digital interfaces. This session connects historic conceptions of interface and adaptable design with contemporary developments including Google's Material Design, looking toward a truly adaptive future that transforms “users” into individual creators by directly enabling the expression of individual intent.",
        "startsAt": "2022-09-02T10:40:00",
        "endsAt": "2022-09-02T11:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "e5b2f08d-1990-4d45-b06f-342234e6d688",
            "name": "Liam Spradlin"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45665,
                "name": "Design"
              },
              {
                "id": 45675,
                "name": "UI/UX"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27013,
        "room": "Liskov",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "353191",
        "title": "Coding for Good: Achieving social change with an app",
        "description": "As coders, we have an enviable ability to create platforms and apps that bring people together. The world is not short of challenges right now, especially climate change, but we will only have a real impact on the world if we can help people unite and organise to pressure those with power and influence.\r\n\r\nChris and his husband quickly developed an app ten years ago to allow ordinary people to lobby the normally inaccessible and unelected House of Lords to pass the Same Sex Marriage Bill. It unexpectedly took off, with 15,000 emails sent in the space of two weeks, helping the Bill overwhelmingly succeed in the normally-socially-conservative upper House of Parliament in the UK.\r\n\r\nHe'll talk here about how he did it, and how you - an individual with a computer and knowledge of how to knock an app together - can use this skill to give a voice to the voiceless, and to potentially change or even save the world.",
        "startsAt": "2022-09-02T11:30:00",
        "endsAt": "2022-09-02T12:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "f53882b1-df66-4d6c-9ec1-888badcdd224",
            "name": "Chris Ward"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24364,
        "room": "Hopper",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "353202",
        "title": "Creating & Scaling Meaningful Performance Tests in CI",
        "description": "Performance testing is easier and more important than ever, especially with the recent emergence of Macro/Microbenchmark, JankStats, and other libraries/tools. While these methods provide a great way to catch regressions before they make it into production, determining what to test, how to create good tests to catch that “what”, and orchestrating tests at scale in CI introduces many new challenges to the mix.\r\n\r\nI plan to give an intermediate-level talk about how to solve those new challenges when performance testing in CI.\r\n\r\nI plan for audience members to leave my talk learning:\r\n\r\n- What mobile performance metrics are worthy of being tested on mobile in CI vs what’s best suited for using production data.\r\n- What makes for a truly useful performance test. (controllable, user-impacting, reproducible, i.e. doesn't deal with network/IO latency, focuses on rendering performance and on-device functionality)\r\n- How to build those truly useful tests to benchmark the mobile-specific metrics we determined we wanted to measure (leveraging Macrobenchmark/UiAutomator).\r\n- How to combine all the previous points to orchestrate consistent and accurate tests on both emulators and real, physical devices in CI.",
        "startsAt": "2022-09-02T11:30:00",
        "endsAt": "2022-09-02T12:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "b6be1289-f8db-4375-9e2a-4a2b1ba37e28",
            "name": "Ryan Brooks"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45658,
                "name": "Tooling"
              },
              {
                "id": 45659,
                "name": "CI/CD"
              },
              {
                "id": 45666,
                "name": "Testing"
              },
              {
                "id": 45670,
                "name": "Libraries"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27014,
        "room": "Booth",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "282306",
        "title": "Demystifying the UX of Compose Guidance",
        "description": "Guidance is one of the key factors for developers to learn and onboard to using Jetpack Compose. In this talk, we will share the exclusive design work Android Developer UX (ADUX) team has been leading to make the documentation and guidance materials for Compose more usable and approachable, from the creation of the Jet samples to the latest Now in Android app.",
        "startsAt": "2022-09-02T11:30:00",
        "endsAt": "2022-09-02T12:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "49ac2635-61c7-4ff0-859a-2e59cf28c615",
            "name": "Preethi Srinivas"
          },
          {
            "id": "eb4483f1-306b-447d-9888-648ec0fc0018",
            "name": "Chris Sinco"
          },
          {
            "id": "b6d5d32f-c10f-42af-a48c-8419ddce2b03",
            "name": "Paris Hsu"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45652,
                "name": "Introductory and overview"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45665,
                "name": "Design"
              },
              {
                "id": 45674,
                "name": "Android Studio"
              },
              {
                "id": 45675,
                "name": "UI/UX"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24363,
        "room": "Hamilton",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "352500",
        "title": "KMP4FREE in 2023",
        "description": "At Droidcon SF 2022, I first publicly announced the KMP4FREE Gradle Plugin and how it can be used to seamlessly toggle between the Kotlin JVM and Kotlin Multiplatform Plugins with a single line change.  In this talk I'll show you what this will look like over the next year, and more real world examples of how this Gradle Plugin can be used.  KMP4FREE can help you can start making your Kotlin code Multiplatform Compatible, today!",
        "startsAt": "2022-09-02T11:30:00",
        "endsAt": "2022-09-02T12:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "dd32d92b-40e8-4dcf-a29c-a66ec2473b6f",
            "name": "Sam Edwards"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45658,
                "name": "Tooling"
              },
              {
                "id": 45660,
                "name": "Cross-Platform"
              },
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              },
              {
                "id": 45670,
                "name": "Libraries"
              },
              {
                "id": 45672,
                "name": "Gradle"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24362,
        "room": "Lovelace",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "280055",
        "title": "Making apps blazing fast with Baseline Profiles",
        "description": "Baseline Profiles are a new way to dramatically improve the performance of your app with minimal effort. This talk will dive deep into how Cloud Profiles work, and introduce the latest improvements in ART profiles called Baseline Profiles. We will introduce what Baseline Profiles are, and what ART does under the hood to make your apps faster.\r\n\r\nThe talk will also provide context for Android Platform improvements over the past several years starting with Android L & M where ART introduced full AoT compilation and the Optimizing  apps dialog; Profile Guided Optimizations (PGO) starting Android N; Cloud Profiles in Android P and now Baseline Profiles.\r\n\r\nDevelopers will learn how to create Baseline Profiles and more importantly how to benchmark and tune profiles.\r\n",
        "startsAt": "2022-09-02T11:30:00",
        "endsAt": "2022-09-02T12:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "9caa9624-350a-4e69-8ac4-88db14bdb5bf",
            "name": "Rahul Ravikumar"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45658,
                "name": "Tooling"
              },
              {
                "id": 45663,
                "name": "Android"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27013,
        "room": "Liskov",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "338271",
        "title": "AOSP customization",
        "description": "Writing your own Android apps is so cool, but what's even cooler than being cool? Using Android Studio to make your own entire Android-based Operating System, and it's not even hard!\r\n\r\nIn this talk we'll cover:\r\n- What is the Android Open-Source Project, how is it different than the Android that I have on my phone, and which parts are easy to customize vs which parts might be harder\r\n- How to setup and build AOSP, and get the image onto a real Pixel device or emulator\r\n- How you can get a working environment for AOSP similar to what you're used to for writing Android apps\r\n- How to add your own apps or even replace the default apps (even add a custom launcher!)\r\n- How to override the status bar / navigation bar UIs\r\n- Tools that AOSP uses under the hood to build and manage the source code, and how you can take advantage of them to create your own builds\r\n- How to get code from our your private repositories into AOSP",
        "startsAt": "2022-09-02T13:20:00",
        "endsAt": "2022-09-02T14:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "5085327b-78aa-414a-86fc-03cd276113db",
            "name": "Effie Barak"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45654,
                "name": "Advanced"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27013,
        "room": "Liskov",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "352912",
        "title": "Meta-programming with KSP and Kotlin compiler plugins",
        "description": "Meta-programming allows us developers to augment the code we write in various ways. Thanks to the Kotlin compiler team, anyone can enhance the Kotlin compilation process.\r\n\r\nLearn how to use KSP, how to write Kotlin compiler plugins and when to choose between either of them. ",
        "startsAt": "2022-09-02T13:20:00",
        "endsAt": "2022-09-02T14:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "969813cd-0231-4310-9c61-745967bd94c5",
            "name": "Tadeas Kriz"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45658,
                "name": "Tooling"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              },
              {
                "id": 45670,
                "name": "Libraries"
              },
              {
                "id": 45672,
                "name": "Gradle"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24362,
        "room": "Lovelace",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "351982",
        "title": "Navigation and Dependency Injection in Compose",
        "description": "Applying the lessons Square has learned about DI-friendly navigation patterns to Compose-first apps. Life gets better when you recognize that Android is not a web browser.",
        "startsAt": "2022-09-02T13:20:00",
        "endsAt": "2022-09-02T14:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "be1bf411-f71e-44f9-9724-84a07db119c8",
            "name": "Ray Ryan"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45669,
                "name": "Dagger"
              },
              {
                "id": 45677,
                "name": "Modularization"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24363,
        "room": "Hamilton",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "330679",
        "title": "What does Recomposition mean to your app?",
        "description": "You’ve heard a lot that Jetpack Compose is a declarative UI toolkit and it recomposes only the components that changed. But what does it exactly mean? How does it apply not only in the scale of one composable function but the entire app? Well, it turns out there is more than meets the eye when it comes to recomposition, and in this talk, we will deep dive into its benefits, costs, and gotchas. You’ll learn some practical tips to efficiently build functions in Jetpack Compose.",
        "startsAt": "2022-09-02T13:20:00",
        "endsAt": "2022-09-02T14:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "72c63733-5d76-4159-bdb3-969aea5c1147",
            "name": "Aida Issayeva"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24364,
        "room": "Hopper",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "343392",
        "title": "Decompose your Kotlin Multiplatform project into feature modules",
        "description": "Maintaining a (not only) Kotlin Multiplatform project may become difficult as it grows. In this session, you will learn how to reduce the complexity and coupling of your code and improve testability by splitting the code into tree-structured feature modules.\r\n\r\nI will use my own library - Decompose - to provide each feature with a single entry-point, and to navigate between features in common code. I will also demonstrate how platform-specific UI can be plugged with this architecture - Jetpack Compose for Android, SwiftUI for iOS and React for Web.\r\n",
        "startsAt": "2022-09-02T14:10:00",
        "endsAt": "2022-09-02T14:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "7893992d-c5e7-4bcf-8786-68f753ef1404",
            "name": "Arkadii Ivanov"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              },
              {
                "id": 45670,
                "name": "Libraries"
              },
              {
                "id": 45677,
                "name": "Modularization"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24362,
        "room": "Lovelace",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "331050",
        "title": "Fakes over Mocks: Shift your paradigm and identify monolithic code",
        "description": "- Mocks can be powerful, but also can be a trap to start testing implementation details rather than output/state\r\n- Migrating from mocks to fakes can help identify monolithic code that violates the Single-Responsibility principle\r\n- Thinking with reusable fakes makes tests run in environments closer to fully integrated code\r\n- This talk is aimed toward developers already familiar with mockito or mocktail\r\n",
        "startsAt": "2022-09-02T14:10:00",
        "endsAt": "2022-09-02T14:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "ef5ea5c2-a356-4be0-b229-c82397075efa",
            "name": "Caleb Donoho"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45652,
                "name": "Introductory and overview"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45660,
                "name": "Cross-Platform"
              },
              {
                "id": 45666,
                "name": "Testing"
              },
              {
                "id": 45667,
                "name": "Flutter"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27014,
        "room": "Booth",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "334579",
        "title": "Functional Programming in Kotlin for AndroidDevs",
        "description": "This talk is anyone who is curious about functional programming and to understand how this is possible with Kotlin and how it enables us to write pure functions for our everyday Android chores.\r\n\r\nThe talk will start from the basics - understanding the functional programming paradigm with mathematical models, why we need it and how different it is from regular functions. We'll then do a postmortem of few default functions offered by Kotlin OOTB to grasp the basics. Then we'll cover something a bit intermediate - composing our own functions with some aesthetics (demo, yes!) with examples to also some advanced concepts like Currying. Finally, we'll end the talk with small quiz like for audience to find pure and impure functions written in Kotlin\r\n\r\nThe following talk is an amalgamation from my 4 part blog series - https://www.harivignesh.dev/functional-programming-in-kotlin-f(1)\r\n\r\nThe blogs were featured in Android editorials - Android Weekly issue 421, 412 etc.  \r\n",
        "startsAt": "2022-09-02T14:10:00",
        "endsAt": "2022-09-02T14:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "468b2a39-fd0f-4aa4-b5d1-adf552a86aaf",
            "name": "Hari Vignesh Jayapalan"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              },
              {
                "id": 45671,
                "name": "Functional Programming"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24364,
        "room": "Hopper",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "353219",
        "title": "Understanding the principles of Rx, Flow, Compose, and more, through Programming Paradigms",
        "description": "In the last 5-10 years we've seen a meteoric rise in very similar libraries across the industry: RxJava, React, Kotlin Flow, Compose, Workflow. As these libraries have sprung up, we're able to identify some common ideas between them, like uni-directional data flow, but these definitions have been loose and quite unspecific, and it seems few people even today can explain what is reactive programming with much confidence.\r\n\r\nIn my search to really understand the core principles behind these libraries, I discovered a in-depth trove of programming paradigms and how they applied to our day-to-day work. We've all heard about imperative programming, functional programming, and object-oriented programming, but how much do we hear about relational programming (SQL), continuation programming (coroutines), or concurrent logic programming (Excel)? Different programming paradigms are suited for different problems, so having a vocabulary to explain why we probably wouldn't use MapReduce to write Android UI can be helpful.\r\n\r\nThis session introduces and then dives into examples of how to use programming paradigms to build stronger abstractions and fundamentally safer code in our day-to-day work. Learning about how the programming model we're working in will give us a different lens to view the rules of the code we work on.",
        "startsAt": "2022-09-02T14:10:00",
        "endsAt": "2022-09-02T14:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "0283e30a-9d71-48f9-8634-2daa31d296e5",
            "name": "Victor Lai"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45664,
                "name": "Kotlin"
              },
              {
                "id": 45671,
                "name": "Functional Programming"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27013,
        "room": "Liskov",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "342146",
        "title": "Using Compose Runtime to create a client library",
        "description": "Jetpack Compose (UI) is a powerful UI toolkit for Android. Have you ever wondered where this power comes from? The answer is Compose Runtime. \r\n\r\nIn this talk, we will see how we can use Compose Runtime to create client libraries. Firstly, we will talk about Compose nodes, Composition, Recomposer, and how they are orchestrated to create a slot table. Then, we will see how the changes in the slot table are applied with an Applier. Moreover, we will touch upon the Snapshot system and how the changes in the state objects trigger a recomposition. Finally, we will create a basic UI toolkit for PowerPoint using Compose Runtime.",
        "startsAt": "2022-09-02T14:10:00",
        "endsAt": "2022-09-02T14:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "5f7faf69-dd61-4ad6-b6d8-0173cae292d8",
            "name": "Fatih Giriş"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              },
              {
                "id": 45670,
                "name": "Libraries"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24363,
        "room": "Hamilton",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "352154",
        "title": "Building StateFlows in Android with Jetpack Compose",
        "description": "Compose is not just a UI toolkit. It is a general purpose tool for working with a trees of nodes. In this talk, I will present a library called Molecule that uses Compose to create StateFlows. I'll go over how to set up and use the library, and dive into how it works internally. I'll share examples of how to setup Molecule in different architectures and the benefits it provides. ",
        "startsAt": "2022-09-02T15:00:00",
        "endsAt": "2022-09-02T15:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "a79f3682-df5c-40e4-8aa8-1b6eaa7bdeec",
            "name": "Mohit Sarveiya"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45652,
                "name": "Introductory and overview"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              },
              {
                "id": 45668,
                "name": "Coroutines"
              },
              {
                "id": 45670,
                "name": "Libraries"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 27014,
        "room": "Booth",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "357066",
        "title": "Mobile Application Performance Done The Right Way",
        "description": "In the overcrowded mobile market, performance is key but a problem still exists; it’s hard to measure performance. Mobile app performance analysis tools have lagged behind the advances in Observability - until now. Join this session  where we will be rethinking mobile performance management. Learn about the impact of combining tracing and APM specifically for mobile app developers to be able to see their user flows and the code behind them. \r\n\r\nOur ultimate goal is that democratizing software development leads to a better — more performant, inclusive and thoughtful — mobile product and UX. Attend this session to get an introduction to groundbreaking technology and toolsets where we will dive deep through code with a single pane of glass for Android and iOS, and visualize apps alongside their code in a totally new way.\r\n",
        "startsAt": "2022-09-02T15:00:00",
        "endsAt": "2022-09-02T15:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "f68c555c-f04a-406c-85ad-77fb7705b5fb",
            "name": "Steve Lerner"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45658,
                "name": "Tooling"
              },
              {
                "id": 45666,
                "name": "Testing"
              },
              {
                "id": 45679,
                "name": "sponsor"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24364,
        "room": "Hopper",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "353534",
        "title": "Simplified Swift Multiplatform Integration",
        "description": "Some platform specific Apple APIs are only available as Swift modules. Lets take advantage of Cocoapods to integrate Swift code directly into our project and build a Multiplatform library with a pure Kotlin interface over the underlying platform specifics. We then take this further, and learn how to structure a Swift project to consume the published Kotlin library.\r\n\r\nKey Takeaways and Learning Points:\r\n- Integrating different languages in a single library is not as difficult as it seems\r\n- Consuming Swift from Kotlin and vice-versa opens up a lots of cross platform code sharing\r\n- Kotlin native interop is with Obj-C, this is a constraint not a blocker for Swift interop\r\n- See details on how to setup Gradle tooling for a smooth workflow",
        "startsAt": "2022-09-02T15:00:00",
        "endsAt": "2022-09-02T15:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "810d0e04-3970-4752-a618-7424711b5876",
            "name": "David Taylor"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45654,
                "name": "Advanced"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45660,
                "name": "Cross-Platform"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              },
              {
                "id": 45670,
                "name": "Libraries"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24362,
        "room": "Lovelace",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "289271",
        "title": "Using Jetpack Compose to Create Apps From Figma UI Sketches",
        "description": "Jetpack Compose is the new incredibly powerful UI rendering framework for Android. While its out of the box functionality is intuitive and great for building material apps, Lunchbox is leveraging it's more customizable aspects and new ways of passing data across UI elements to create a framework for designers to be able to rapidly create branded apps for our clients from basic templates.\r\n\r\nLunchbox is a company building white-label ordering apps for restaurants with flexible design and feature sets, and fully customizable branding. Using Compose, the Lunchbox Android team is looking to cut developers entirely out of the onboarding of a new client.\r\n\r\nDevelopers build out Composables, which the design team then sizes, styles, and inserts into app screens. Since UI components only need to be built once, and can be deployed to any one of our white-label apps, developers only ever have to build features and never build layouts for existing or new clients.",
        "startsAt": "2022-09-02T15:00:00",
        "endsAt": "2022-09-02T15:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "985c0bbb-1128-4f22-b943-1001f99e2523",
            "name": "Mikhail Foenko"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45664,
                "name": "Kotlin"
              },
              {
                "id": 45675,
                "name": "UI/UX"
              },
              {
                "id": 45677,
                "name": "Modularization"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24363,
        "room": "Hamilton",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "352849",
        "title": "A deep dive into deep links",
        "description": "Deep links are an integral tool to drive users directly to specific screens within your mobile app, entering potential and returning users into a desired action flow. However, deep links can be challenging to implement because developers must manage non-typical points of entry to the app (e.g., entering the app without launching a home screen) while also managing the app’s back stack.\r\n\r\nUsing the Xfinity app as an example, we will explain how deep links work and describe the process behind creating them. We will also explore the difference between a deep link and an app link, how to associate a website to a mobile app, and how to make an app react to deep links. We will address more advanced concepts, such as:\r\n\r\n• Testing deep links via Android Debug Bridge (adb) and Android Studio\r\n• Debugging deep links\r\n• Typical navigational patterns when receiving deep links\r\n• Handling extra parameter additions to deep links\r\n• Using custom schemas",
        "startsAt": "2022-09-02T15:50:00",
        "endsAt": "2022-09-02T16:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "84335047-a7cd-437e-986f-1d6b6df31072",
            "name": "Chrystian Vieyra"
          },
          {
            "id": "7c735ef4-4e80-45e1-8476-166685bda406",
            "name": "Sanat Tripathi"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45652,
                "name": "Introductory and overview"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45658,
                "name": "Tooling"
              },
              {
                "id": 45663,
                "name": "Android"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24363,
        "room": "Hamilton",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "352842",
        "title": "Leverage Compose Tooling to Improve Your Workflow",
        "description": "This talk will take you on a tour of Compose tooling available in Android Studio, with live-coded examples that demonstrate how you can:\r\n \r\n- Get the most out of Composable Preview and Multipreview Annotations\r\n- Understand the limitations of Live Edit and where it can and can’t save you time\r\n- Use Layout Inspector to analyze your layout, allowing you to better understand recomposition and pinpoint performance issues\r\n- Choreograph your animations to perfection using Animation Preview\r\n- And more!\r\n \r\nWhether you’re just beginning with Jetpack Compose or already using it in your production app, this talk aims to show how incorporating more features of Compose tooling into your workflow can save you time and help you build a more performant UI.",
        "startsAt": "2022-09-02T15:50:00",
        "endsAt": "2022-09-02T16:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "a2db05ff-4ebb-4816-8fab-7f51c2267da7",
            "name": "Ramona Harrison"
          }
        ],
        "categories": [
          {
            "id": 20901,
            "name": "Level",
            "categoryItems": [
              {
                "id": 45653,
                "name": "Intermediate"
              }
            ],
            "sort": 2
          },
          {
            "id": 20902,
            "name": "Session format",
            "categoryItems": [
              {
                "id": 45656,
                "name": "Session"
              }
            ],
            "sort": 1000
          },
          {
            "id": 20903,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 45658,
                "name": "Tooling"
              },
              {
                "id": 45663,
                "name": "Android"
              },
              {
                "id": 45674,
                "name": "Android Studio"
              },
              {
                "id": 45675,
                "name": "UI/UX"
              }
            ],
            "sort": 1004
          },
          {
            "id": 20904,
            "name": "Track",
            "categoryItems": [
              {
                "id": 45680,
                "name": "droidcon"
              }
            ],
            "sort": 1001
          }
        ],
        "roomId": 24362,
        "room": "Lovelace",
        "liveUrl": null,
        "recordingUrl": null
      }
    ],
    "isDefault": false
  }
]
